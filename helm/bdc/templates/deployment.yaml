apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bdc.fullname" . }}-web
  labels:
    {{- include "bdc.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels:
      {{- include "bdc.web.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bdc.web.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "bdc.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-web
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.web.image.repository}}:{{ .Values.web.image.tag}}"
          imagePullPolicy: {{ .Values.web.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: COATTAILS_HOSTNAME
              value: http://{{ include "bdc.fullname" . }}-backend:38001
          command:
            - nginx
            - "-g"
            - "daemon off;"
      #   - name: tunnel
      #     image: joshma/cloudflared:latest
      #     imagePullPolicy: Always
      #     command:
      #       - "/opt/cloudflared"
      #       - "tunnel"
      #     args:
      #     - --url=http://127.0.0.1:8000
      #     - --hostname=bluedresscapital.mgb.dog
      #     - --origincert=/etc/cloudflared/cert.pem
      #     - --no-autoupdate
      #     env:
      #     - name: POD_NAME
      #       valueFrom:
      #         fieldRef:
      #           fieldPath: metadata.name
      #     - name: POD_NAMESPACE
      #       valueFrom:
      #         fieldRef:
      #           fieldPath: metadata.namespace
      #     resources:
      #       limits:
      #         cpu: 50m
      #         memory: 20Mi
      #       requests:
      #         cpu: 50m
      #         memory: 20Mi
      #     volumeMounts:
      #     - mountPath: /etc/cloudflared
      #       name: tunnel-secret
      #       readOnly: true
      # terminationGracePeriodSeconds: 60
      # volumes:
      # - name: tunnel-secret
      #   secret:
      #     secretName: mgb.dog
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bdc.fullname" . }}-backend
  labels:
    {{- include "bdc.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "bdc.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bdc.backend.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "bdc.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-backend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository}}:{{ .Values.backend.image.tag}}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command:
            - ./main
            - "-pg-host"
            - "bdc-postgresql"
            - "-pg-pwd"
            - "bdc"
            - "-redis-host"
            - "bdc-redis-master"
      #   - name: tunnel
      #     image: joshma/cloudflared:latest
      #     imagePullPolicy: Always
      #     command:
      #       - "/opt/cloudflared"
      #       - "tunnel"
      #     args:
      #     - --url=http://127.0.0.1:8080
      #     - --hostname=api-bluedresscapital.mgb.dog
      #     - --origincert=/etc/cloudflared/cert.pem
      #     - --no-autoupdate
      #     env:
      #     - name: POD_NAME
      #       valueFrom:
      #         fieldRef:
      #           fieldPath: metadata.name
      #     - name: POD_NAMESPACE
      #       valueFrom:
      #         fieldRef:
      #           fieldPath: metadata.namespace
      #     resources:
      #       limits:
      #         cpu: 50m
      #         memory: 20Mi
      #       requests:
      #         cpu: 50m
      #         memory: 20Mi
      #     volumeMounts:
      #     - mountPath: /etc/cloudflared
      #       name: tunnel-secret
      #       readOnly: true
      # terminationGracePeriodSeconds: 60
      # volumes:
      # - name: tunnel-secret
      #   secret:
      #     secretName: mgb.dog


      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
